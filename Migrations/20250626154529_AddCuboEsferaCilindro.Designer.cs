// <auto-generated />
using System;
using AREASYVOLUMENES;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AREASYVOLUMENES.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250626154529_AddCuboEsferaCilindro")]
    partial class AddCuboEsferaCilindro
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AREASYVOLUMENES.Models.Cilindro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Altura")
                        .HasColumnType("double precision");

                    b.Property<double>("Area")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("FechaCalculo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Perimetro")
                        .HasColumnType("double precision");

                    b.Property<double>("Radio")
                        .HasColumnType("double precision");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Volumen")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Cilindros");
                });

            modelBuilder.Entity("AREASYVOLUMENES.Models.Circulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Area")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("FechaCalculo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Perimetro")
                        .HasColumnType("double precision");

                    b.Property<double>("Radio")
                        .HasColumnType("double precision");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Volumen")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Circulos");
                });

            modelBuilder.Entity("AREASYVOLUMENES.Models.Cuadrado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Area")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("FechaCalculo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Lado")
                        .HasColumnType("double precision");

                    b.Property<double>("Perimetro")
                        .HasColumnType("double precision");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Volumen")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Cuadrados");
                });

            modelBuilder.Entity("AREASYVOLUMENES.Models.Cubo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Area")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("FechaCalculo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Lado")
                        .HasColumnType("double precision");

                    b.Property<double>("Perimetro")
                        .HasColumnType("double precision");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Volumen")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Cubos");
                });

            modelBuilder.Entity("AREASYVOLUMENES.Models.Esfera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Area")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("FechaCalculo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Perimetro")
                        .HasColumnType("double precision");

                    b.Property<double>("Radio")
                        .HasColumnType("double precision");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Volumen")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Esferas");
                });

            modelBuilder.Entity("AREASYVOLUMENES.Models.Rectangulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Altura")
                        .HasColumnType("double precision");

                    b.Property<double>("Area")
                        .HasColumnType("double precision");

                    b.Property<double>("Base")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("FechaCalculo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Perimetro")
                        .HasColumnType("double precision");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Volumen")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Rectangulos");
                });
#pragma warning restore 612, 618
        }
    }
}
